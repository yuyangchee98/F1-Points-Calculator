export interface PointsSystem {
  id: string;
  name: string;
  description: string;
  regular: Record<number, number>;
  sprint?: Record<number, number>;
  fastestLap?: number;
  rules?: {
    fastestLapRequiresTop10?: boolean;
  };
}

export const POINTS_SYSTEMS: Record<string, PointsSystem> = {
  'current': {
    id: 'current',
    name: 'Current F1 (2010-present)',
    description: 'Standard F1 points system used since 2010',
    regular: {
      1: 25,
      2: 18,
      3: 15,
      4: 12,
      5: 10,
      6: 8,
      7: 6,
      8: 4,
      9: 2,
      10: 1,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    },
    sprint: {
      1: 8,
      2: 7,
      3: 6,
      4: 5,
      5: 4,
      6: 3,
      7: 2,
      8: 1,
      9: 0,
      10: 0,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    },
    fastestLap: 1,
    rules: {
      fastestLapRequiresTop10: true
    }
  },
  '2003-2009': {
    id: '2003-2009',
    name: '2003-2009 System',
    description: 'Points system used from 2003 to 2009',
    regular: {
      1: 10,
      2: 8,
      3: 6,
      4: 5,
      5: 4,
      6: 3,
      7: 2,
      8: 1,
      9: 0,
      10: 0,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  '1991-2002': {
    id: '1991-2002',
    name: '1991-2002 System',
    description: 'Points system used from 1991 to 2002',
    regular: {
      1: 10,
      2: 6,
      3: 4,
      4: 3,
      5: 2,
      6: 1,
      7: 0,
      8: 0,
      9: 0,
      10: 0,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  'linear': {
    id: 'linear',
    name: 'Linear System',
    description: 'Points decrease by 1 for each position',
    regular: {
      1: 20,
      2: 19,
      3: 18,
      4: 17,
      5: 16,
      6: 15,
      7: 14,
      8: 13,
      9: 12,
      10: 11,
      11: 10,
      12: 9,
      13: 8,
      14: 7,
      15: 6,
      16: 5,
      17: 4,
      18: 3,
      19: 2,
      20: 1,
    },
    sprint: {
      1: 10,
      2: 9,
      3: 8,
      4: 7,
      5: 6,
      6: 5,
      7: 4,
      8: 3,
      9: 2,
      10: 1,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  'winner-takes-all': {
    id: 'winner-takes-all',
    name: 'Winner Takes All',
    description: 'Only the winner receives points',
    regular: {
      1: 100,
      2: 0,
      3: 0,
      4: 0,
      5: 0,
      6: 0,
      7: 0,
      8: 0,
      9: 0,
      10: 0,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    },
    sprint: {
      1: 25,
      2: 0,
      3: 0,
      4: 0,
      5: 0,
      6: 0,
      7: 0,
      8: 0,
      9: 0,
      10: 0,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  'top-heavy': {
    id: 'top-heavy',
    name: 'Top Heavy',
    description: 'Heavily rewards top 3 positions',
    regular: {
      1: 50,
      2: 30,
      3: 20,
      4: 10,
      5: 8,
      6: 6,
      7: 4,
      8: 3,
      9: 2,
      10: 1,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    },
    sprint: {
      1: 20,
      2: 12,
      3: 8,
      4: 5,
      5: 3,
      6: 2,
      7: 1,
      8: 0,
      9: 0,
      10: 0,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  '1960s-1980s': {
    id: '1960s-1980s',
    name: '1960s-1980s System',
    description: 'Classic F1 system where every point was precious',
    regular: {
      1: 9,
      2: 6,
      3: 4,
      4: 3,
      5: 2,
      6: 1,
      7: 0,
      8: 0,
      9: 0,
      10: 0,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  '1950s': {
    id: '1950s',
    name: '1950s Original',
    description: 'The very first F1 points system',
    regular: {
      1: 8,
      2: 6,
      3: 4,
      4: 3,
      5: 2,
      6: 0,
      7: 0,
      8: 0,
      9: 0,
      10: 0,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  'motogp': {
    id: 'motogp',
    name: 'MotoGP Style',
    description: 'Top 15 score, rewards more finishers',
    regular: {
      1: 25,
      2: 20,
      3: 16,
      4: 13,
      5: 11,
      6: 10,
      7: 9,
      8: 8,
      9: 7,
      10: 6,
      11: 5,
      12: 4,
      13: 3,
      14: 2,
      15: 1,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  'indycar': {
    id: 'indycar',
    name: 'IndyCar/NASCAR Style',
    description: 'All positions score with small gaps',
    regular: {
      1: 50,
      2: 40,
      3: 35,
      4: 32,
      5: 30,
      6: 28,
      7: 26,
      8: 24,
      9: 22,
      10: 20,
      11: 19,
      12: 18,
      13: 17,
      14: 16,
      15: 15,
      16: 14,
      17: 13,
      18: 12,
      19: 11,
      20: 10,
    }
  },
  'formula-e': {
    id: 'formula-e',
    name: 'Formula E Style',
    description: 'Standard points plus bonus opportunities',
    regular: {
      1: 25,
      2: 18,
      3: 15,
      4: 12,
      5: 10,
      6: 8,
      7: 6,
      8: 4,
      9: 2,
      10: 1,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    },
    fastestLap: 1
  },
  'exponential': {
    id: 'exponential',
    name: 'Exponential Decay',
    description: 'Points halve each position',
    regular: {
      1: 32,
      2: 16,
      3: 8,
      4: 4,
      5: 2,
      6: 1,
      7: 0.5,
      8: 0.25,
      9: 0.125,
      10: 0.0625,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  'olympic': {
    id: 'olympic',
    name: 'Olympic Medals',
    description: 'Only podium positions count',
    regular: {
      1: 5,
      2: 3,
      3: 1,
      4: 0,
      5: 0,
      6: 0,
      7: 0,
      8: 0,
      9: 0,
      10: 0,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  'progressive': {
    id: 'progressive',
    name: 'Progressive Linear',
    description: 'Gentle slope rewarding consistency',
    regular: {
      1: 30,
      2: 28,
      3: 26,
      4: 24,
      5: 22,
      6: 20,
      7: 18,
      8: 16,
      9: 14,
      10: 12,
      11: 10,
      12: 8,
      13: 6,
      14: 4,
      15: 2,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  'fibonacci': {
    id: 'fibonacci',
    name: 'Fibonacci Sequence',
    description: 'Mathematical elegance in points',
    regular: {
      1: 34,
      2: 21,
      3: 13,
      4: 8,
      5: 5,
      6: 3,
      7: 2,
      8: 1,
      9: 1,
      10: 1,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  'square-root': {
    id: 'square-root',
    name: 'Square Root Curve',
    description: 'Points based on âˆš(21-position)',
    regular: {
      1: 4.47,
      2: 4.24,
      3: 4,
      4: 3.74,
      5: 3.46,
      6: 3.16,
      7: 2.83,
      8: 2.45,
      9: 2,
      10: 1.41,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  },
  'reliability': {
    id: 'reliability',
    name: 'Reliability Reward',
    description: 'Standard points plus finish bonus',
    regular: {
      1: 30,
      2: 23,
      3: 20,
      4: 17,
      5: 15,
      6: 13,
      7: 11,
      8: 9,
      9: 7,
      10: 6,
      11: 5,
      12: 5,
      13: 5,
      14: 5,
      15: 5,
      16: 5,
      17: 5,
      18: 5,
      19: 5,
      20: 5,
    }
  },
  'underdog': {
    id: 'underdog',
    name: 'Underdog System',
    description: 'Inverse points - last place wins!',
    regular: {
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      8: 8,
      9: 9,
      10: 10,
      11: 11,
      12: 12,
      13: 13,
      14: 14,
      15: 15,
      16: 16,
      17: 17,
      18: 18,
      19: 19,
      20: 20,
    }
  },
  'win-bonus': {
    id: 'win-bonus',
    name: 'Win Bonus',
    description: 'Current system but wins get +10 extra',
    regular: {
      1: 35,
      2: 18,
      3: 15,
      4: 12,
      5: 10,
      6: 8,
      7: 6,
      8: 4,
      9: 2,
      10: 1,
      11: 0,
      12: 0,
      13: 0,
      14: 0,
      15: 0,
      16: 0,
      17: 0,
      18: 0,
      19: 0,
      20: 0,
    }
  }
};

export const getPointsForPositionWithSystem = (
  position: number, 
  isSprint: boolean, 
  systemId: string
): number => {
  const system = POINTS_SYSTEMS[systemId] || POINTS_SYSTEMS['current'];
  
  if (isSprint && system.sprint) {
    return system.sprint[position] || 0;
  }
  
  return system.regular[position] || 0;
};

export const DEFAULT_POINTS_SYSTEM = 'current';